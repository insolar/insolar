name: insolar
on:
  push:
    tags:
      - '*'
jobs:
  build-pack-release:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@master
      - name: setup golang
        uses: actions/setup-go@v1
        with:
          go-version: '1.12.10'
      - name: build project
        run: |
          make build
      - name: gather info
        id: pack
        run: |
          echo "::set-output name=tag_name::$(echo $GITHUB_REF | cut -d '/' -f3)"
      - name: pack project
        run: |
          docker build -t ${{ github.workflow }}:${{ steps.pack.outputs.tag_name }} --pull .
          docker tag ${{ github.workflow }}:${{ steps.pack.outputs.tag_name }} ${{ secrets.REGISTRY_URL }}/${{ github.workflow }}:${{ steps.pack.outputs.tag_name }}
          docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} ${{ secrets.REGISTRY_URL }}
          docker push ${{ secrets.REGISTRY_URL }}/${{ github.workflow }}:${{ steps.pack.outputs.tag_name }}
      - name: create GH release
        id: create_release
        uses: actions/create-release@becafb2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: attach insolar binary to GH release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/insolar
          asset_name: insolar
          asset_content_type: application/octet-stream
      - name: attach insolard binary to GH release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/insolard
          asset_name: insolard
          asset_content_type: application/octet-stream
      - name: attach keeperd binary to GH release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/keeperd
          asset_name: keeperd
          asset_content_type: application/octet-stream
      - name: attach pulsard binary to GH release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/pulsard
          asset_name: pulsard
          asset_content_type: application/octet-stream
