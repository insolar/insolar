// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at

package object

func TypeFromRecord(generic Record) TypeID {
	switch generic.(type) {
	case *GenesisRecord:
		return 100
	case *ChildRecord:
		return 101
	case *RequestRecord:
		return 200
	case *ResultRecord:
		return 300
	case *TypeRecord:
		return 301
	case *CodeRecord:
		return 302
	case *ObjectActivateRecord:
		return 303
	case *ObjectAmendRecord:
		return 304
	case *DeactivationRecord:
		return 305
	default:
		panic("record is not registered")
	}
}

func RecordFromType(i TypeID) Record {
	switch i {
	case 100:
		return new(GenesisRecord)
	case 101:
		return new(ChildRecord)
	case 200:
		return new(RequestRecord)
	case 300:
		return new(ResultRecord)
	case 301:
		return new(TypeRecord)
	case 302:
		return new(CodeRecord)
	case 303:
		return new(ObjectActivateRecord)
	case 304:
		return new(ObjectAmendRecord)
	case 305:
		return new(DeactivationRecord)
	default:
		panic("record is not registered")
	}
}

func (i TypeID) String() string {
	switch i {
	case 100:
		return "GenesisRecord"
	case 101:
		return "ChildRecord"
	case 200:
		return "RequestRecord"
	case 300:
		return "ResultRecord"
	case 301:
		return "TypeRecord"
	case 302:
		return "CodeRecord"
	case 303:
		return "ObjectActivateRecord"
	case 304:
		return "ObjectAmendRecord"
	case 305:
		return "DeactivationRecord"
	default:
		panic("record is not registered")
	}
}
