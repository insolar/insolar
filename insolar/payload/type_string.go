// Code generated by "stringer -type=Type"; DO NOT EDIT.

package payload

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeUnknown-0]
	_ = x[TypeMeta-1]
	_ = x[TypeError-2]
	_ = x[TypeID-3]
	_ = x[TypeState-4]
	_ = x[TypeGetObject-5]
	_ = x[TypePassState-6]
	_ = x[TypeObjIndex-7]
	_ = x[TypeObjState-8]
	_ = x[TypeIndex-9]
	_ = x[TypePass-10]
	_ = x[TypeGetCode-11]
	_ = x[TypeCode-12]
	_ = x[TypeSetCode-13]
	_ = x[TypeGetFilament-14]
	_ = x[TypeFilamentSegment-15]
	_ = x[TypeSetRequest-16]
	_ = x[TypeSetResult-17]
	_ = x[TypeActivate-18]
}

const _Type_name = "TypeUnknownTypeMetaTypeErrorTypeIDTypeStateTypeGetObjectTypePassStateTypeObjIndexTypeObjStateTypeIndexTypePassTypeGetCodeTypeCodeTypeSetCodeTypeGetFilamentTypeFilamentSegmentTypeSetRequestTypeSetResultTypeActivate"

var _Type_index = [...]uint8{0, 11, 19, 28, 34, 43, 56, 69, 81, 93, 102, 110, 121, 129, 140, 155, 174, 188, 201, 213}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
