version: '3.7'
services:
  prometheus:
    image: "prom/prometheus:v2.7.0"
    volumes:
      - ${PWD}/monitor/prometheus/:/etc/prometheus:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:5.4.2
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_EXPLORE_ENABLED=true
    volumes:
      - ./monitor/grafana/provisioning:/etc/grafana/provisioning
      - ./monitor/grafana/config.ini:/etc/grafana/config.ini
      - ./monitor/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    ports:
      - "3000:3000"

# elastic and kibana are optional here,
# but they provide more powerful  search and analysis than Jaeger's UI (augments it actually).
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.5.4"
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: "single-node"
      xpack.security.enabled: "false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cat/health?h=st"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    # restart: on-failure

  kibana:
    image: "docker.elastic.co/kibana/kibana:6.5.4"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  jaeger:
    image: "jaegertracing/all-in-one:1.8"
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "16687:16687"
    environment:
      SPAN_STORAGE_TYPE: "elasticsearch"
      ES_SERVER_URLS: "http://elasticsearch:9200"
      ES_TAGS_AS_FIELDS: "true"
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16687/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: on-failure
    # restart: on-failure
